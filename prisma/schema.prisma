// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id Int @id @default(autoincrement())
  content String @db.VarChar(1000)
  visible Boolean @default(true)

  user User @relation(fields: [authorId], references: [id])
  authorId Int @unique

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProfilePicture {
  id Int @id @default(autoincrement())
  url String @db.VarChar(255)
  fileType String @db.VarChar(50)
  size Int
  key String @db.VarChar(255)

  profile Profile @relation(fields: [profileId], references: [id])
  profileId Int @unique

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Profile {
  id Int @id @default(autoincrement())
  firstName String @db.VarChar(100)
  lastName String @db.VarChar(100)
  bio String? @db.VarChar(1000)

  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  profilePhoto ProfilePicture? @relation

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id Int @id @default(autoincrement())
  email String @unique @db.VarChar(255)
  password String
  profile Profile?
  posts Post[]
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}